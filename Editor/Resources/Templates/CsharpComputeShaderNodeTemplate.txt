using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using GraphProcessor;
using System.Linq;
using UnityEngine.Rendering;

namespace Mixture
{
	[System.Serializable, NodeMenuItem("Compute/#NAME#")]
	public class #NAME# : ComputeShaderNode
	{
		public override string name => "#NAME#";

        // Override this if you want your node to not support certartain dimensions
		// public override List<OutputDimension> supportedDimensions => new List<OutputDimension>() {
		// 	OutputDimension.Texture2D,
        //     OutputDimension.Texture2D,
        //     OutputDimension.Cubemap,
		// };

		protected override string computeShaderResourcePath => "#NAME#";

        // By default we auto detect the inputs and outputs of the node based on the properties
        // in the compute shader, if you don't want this behavior, you can set them to false.
		protected override bool autoDetectInputs => true;
		protected override bool autoDetectOutputs => true;

        // In case you want to change the compute
		// protected override string previewKernel => null;
        // public override string previewTexturePropertyName => previewComputeProperty;

	}
}